import java.io.*;
import java.util.* ;

import java.util.ArrayList;

public class Solution {

	public static int LongestSubsetWithZeroSum(ArrayList<Integer> arr) {

		HashMap<Integer, Integer> sumIndexMap = new HashMap<>();
        
        int maxLen = 0;
        int currSum = 0;
        
        // Traverse through the array
        for (int i = 0; i < arr.size(); i++) {
            currSum += arr.get(i);
            
            // If the cumulative sum is 0, update maxLen
            if (currSum == 0) {
                maxLen = i + 1;
            }
            
            // If the cumulative sum has been seen before
            if (sumIndexMap.containsKey(currSum)) {
                maxLen = Math.max(maxLen, i - sumIndexMap.get(currSum));
            } else {
                // Store the cumulative sum with its index
                sumIndexMap.put(currSum, i);
            }
        }
        
        return maxLen;	
	}
}